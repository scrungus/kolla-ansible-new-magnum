---
- name: Creating Cloudkitty database
  become: true
  kolla_toolbox:
    module_name: mysql_db
    module_args:
      login_host: "{{ database_address }}"
      login_port: "{{ database_port }}"
      login_user: "{{ database_user }}"
      login_password: "{{ database_password }}"
      name: "{{ cloudkitty_database_name }}"
  run_once: True
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  when:
    - not use_preconfigured_databases | bool

- name: Creating Cloudkitty database user and setting permissions
  become: true
  kolla_toolbox:
    module_name: mysql_user
    module_args:
      login_host: "{{ database_address }}"
      login_port: "{{ database_port }}"
      login_user: "{{ database_user }}"
      login_password: "{{ database_password }}"
      name: "{{ cloudkitty_database_user }}"
      password: "{{ cloudkitty_database_password }}"
      host: "%"
      priv: "{{ cloudkitty_database_name }}.*:ALL"
      append_privs: "yes"
  run_once: True
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  when:
    - not use_preconfigured_databases | bool

- name: Creating Cloudkitty influxdb database
  become: true
  kolla_toolbox:
    module_name: influxdb_database
    module_args:
      hostname: "{{ influxdb_address }}"
      port: "{{ influxdb_http_port }}"
      database_name: "{{ cloudkitty_influxdb_name }}"
  run_once: True
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  when: cloudkitty_storage_backend == 'influxdb'

- name: Creating Cloudkitty elasticsearch index settings component template
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/_component_template/{{ cloudkitty_elasticsearch_component_template_name }}"
      method: PUT
      status_code: 200
      return_content: yes
      body: "{{ lookup('template', item) | to_json }}"
      body_format: json
  run_once: True
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  when: cloudkitty_storage_backend == 'elasticsearch'
  with_first_found:
    - "{{ node_custom_config }}/cloudkitty/cloudkitty_elasticsearch_component_template.json"
    - "templates/cloudkitty_elasticsearch_component_template.json.j2"

- name: Checking if Cloudkitty elasticsearch index alias name exists
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/{{ cloudkitty_elasticsearch_alias_name }}"
      status_code: 200, 404
  run_once: true
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  register: cloudkitty_index
  when: cloudkitty_storage_backend == 'elasticsearch'

- name: Checking if Cloudkitty elasticsearch index alias name is an alias
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/_alias/{{ cloudkitty_elasticsearch_alias_name }}"
      method: HEAD
      status_code: 200, 404
  run_once: true
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  register: cloudkitty_index_alias
  when:
    - cloudkitty_index is not skipped
    - cloudkitty_index.get('status') == 200

- name: Reindexing old Cloudkitty index to new index name
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/_reindex"
      method: POST
      status_code: 200
      body: "{{ lookup('template', 'cloudkitty_elasticsearch_reindex.json.j2') | to_json }}"
      body_format: json
  run_once: true
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  register: cloudkitty_reindex
  when:
    - cloudkitty_index_alias is not skipped
    - cloudkitty_index_alias.get('status') == 404

- name: Deleting old Cloudkitty index
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/{{ cloudkitty_elasticsearch_alias_name }}"
      method: DELETE
      status_code: 200
  run_once: true
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  register: cloudkitty_delete
  when:
    - cloudkitty_reindex is not skipped

- name: Adding alias to new Cloudkitty elasticsearch index
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "{{ cloudkitty_elasticsearch_url }}/{{ cloudkitty_elasticsearch_index_name | urlencode | regex_replace('/','%2F') }}/_alias/{{ cloudkitty_elasticsearch_alias_name }}"
      method: POST
      status_code: 200
      return_content: yes
      body: '{ "is_write_index": true }'
      body_format: json
  run_once: True
  delegate_to: "{{ groups['cloudkitty-api'][0] }}"
  when:
    - cloudkitty_delete is not skipped

- import_tasks: bootstrap_service.yml
