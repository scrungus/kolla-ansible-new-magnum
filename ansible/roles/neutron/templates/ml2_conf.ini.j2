# ml2_conf.ini
[ml2]
# Changing type_drivers after bootstrap can lead to database inconsistencies
type_drivers = {{ neutron_type_drivers }}
tenant_network_types = {{ neutron_tenant_network_types }}
{% if tunnel_address_family == 'ipv6' %}
overlay_ip_version = 6
{% endif %}
{% if neutron_mechanism_drivers %}
mechanism_drivers = {{ neutron_mechanism_drivers | map(attribute='name') | join(',') }}
{% endif %}
{% if neutron_extension_drivers %}
extension_drivers = {{ neutron_extension_drivers | map(attribute='name') | join(',') }}
{% endif %}

{% if enable_opendaylight | bool %}
[ml2_odl]
{% if enable_haproxy | bool %}
url = {{ internal_protocol }}://{{ kolla_internal_vip_address | put_address_in_context('url') }}:{{ opendaylight_haproxy_restconf_port }}/controller/nb/v2/neutron
{% else %}
url = {{ internal_protocol }}://{{ kolla_internal_vip_address | put_address_in_context('url') }}:{{ opendaylight_restconf_port }}/controller/nb/v2/neutron
{% endif %}
username = admin
password = {{ opendaylight_password }}
port_binding_controller = {{ opendaylight_port_binding_type }}
{% endif %}

{% if enable_onos | bool %}
[onos]
url_path = {{ onos_url }}
username = {{ onos_username }}
password = {{ onos_password }}
{% endif %}

[ml2_type_vlan]
{% if enable_ironic | bool %}
network_vlan_ranges = physnet1
{% else %}
network_vlan_ranges =
{% endif %}

[ml2_type_flat]
{% if enable_ironic | bool %}
flat_networks = *
{% else %}
flat_networks = {% for bridge in neutron_bridge_name.split(',') %}physnet{{ loop.index0 + 1 }}{% if not loop.last %},{% endif %}{% endfor %}
{% endif %}

[ml2_type_vxlan]
vni_ranges = 1:1000
